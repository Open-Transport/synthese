<project name="synthese" default="all" basedir=".">

  <import file="../common.xml"/>

  <property name="version" value="3_0"/>
  <property name="lang" value="c++"/>
  
  <property name="include.home" value="${src.home}"/>
  <property name="deploy.local.lib.regexp.from" value="(.*)"/>
  <property name="deploy.local.lib.regexp.to" value="\1"/>

  <property name="profile" value="false"/>     


  <target name="build">

    <fail unless="target"/>

    <antcall target="sconsbuild">
      <param name="goal.param" value="build"/>
      <param name="target.param" value="${target}"/>
      <param name="profile.param" value="${profile}"/>
    </antcall>
    
  </target>
       


  <target name="dist">

    <fail unless="target"/>
    <fail unless="distname"/>

    <antcall target="sconsbuild">
      <param name="goal.param" value="dist"/>
      <param name="target.param" value="${target}"/>
      <param name="profile.param" value="${profile}"/>
      <param name="distname.param" value="${distname}"/>
    </antcall>

  </target>



  <target name="install" depends="dist">

    <propertyregex property="targetname" input="${target}" casesensitive="false"
		   regexp="^.*/(.*)" select="\1" override="true"/>

    <var name="distdir" 
	 value="${build.home}/${platform}/${toolset}/${mode}/main/${targetname}/${distname}_dist"/>
    
    <switch value="${platform}">
      
      <case value="posix">
	
	<exec executable="sudo" dir="${distdir}">
	  <arg value="./install.sh"/>
	</exec>

      </case>
      
      <default>
	<fail message="Installation not supported on ${platform}" />
      </default>
      
    </switch>

  </target>





  <target name="deploy" depends="dist">

    <propertyregex property="targetname" input="${target}" casesensitive="false"
		   regexp="^.*/(.*)" select="\1" override="true"/>

    <var name="distdir" 
	 value="${build.home}/${platform}/${toolset}/${mode}/main/${targetname}/${distname}_dist"/>


      <switch value="${platform}">
      
        <case value="win32">

	  <exec executable="${env.COMSPEC}" failonerror="true" 
		resolveexecutable="true" searchpath="true">
            <arg value="/c scp -q -C -r -P ${deploy.ssh.port} ${build.home}/${platform}/${toolset}/${mode}/main/${targetname}/${distname}_dist ${deploy.ssh.user}@${deploy.ssh.host}:" />
	  </exec>
	  
	  <exec executable="${env.COMSPEC}" failonerror="true" 
		resolveexecutable="true" searchpath="true">
            <arg value="/c ssh -p ${deploy.ssh.port} ${deploy.ssh.user}@${deploy.ssh.host} &quot; cd ${distname}_dist &amp;&amp; sudo ./install.sh &quot;" />
	  </exec>
	  
        </case>
        
        <case value="posix">
	  
           <exec executable="scp" failonerror="true"  
                 resolveexecutable="true" searchpath="true"> 
             <arg value="-q"/> 
             <arg value="-C"/> 
             <arg value="-r"/> 
             <arg value="-P ${deploy.ssh.port}"/> 
             <arg value="${build.home}/${platform}/${toolset}/${mode}/main/${targetname}/${distname}_dist"/> 
             <arg value="${deploy.ssh.user}@${deploy.ssh.host}:${deploy.ssh.tmpdir}"/> 
           </exec> 
      
          <exec executable="ssh" failonerror="true"
                resolveexecutable="true" searchpath="true">
            <arg value="-p ${deploy.ssh.port}"/>
            <arg value="${deploy.ssh.user}@${deploy.ssh.host}"/>
            <arg value="cd ${deploy.ssh.tmpdir}/${distname}_dist &amp;&amp; ./install.sh"/>
          </exec>
      
	  

        </case>
        
        <default>
          <echo message="Do not know how to deploy on ${platform}" />
        </default>
      </switch>
      
      
      
<!--     <sshexec host="${deploy.ssh.host}" trust="true" -->
<!-- 	     username="${deploy.ssh.user}" -->
<!-- 	     port="200" password="${pwd}" -->
<!-- 	     command="cd ${distname}_dist &amp;&amp; -->
<!-- 		      sudo ./install.sh"/> -->

  </target>



<!--
       
  <target name="dist">


    <for param="targ" list="${target}">
       <sequential>
	 <propertyregex property="distname" input="@{targ}" casesensitive="false"
			regexp="^.*/(.*)" select="\1" override="true"/>
	 <var name="distdir" 
		   value="${dist.home}/${distname}_${platform}_${toolset}_${mode}"/>


	 <antcall target="sconsbuild">
	   <param name="goal" value="dist"/>
	   <param name="target" value="@{targ}"/>
	   <param name="profile" value="false"/>
	 </antcall>
	 
	 <if>
	   <and>
	     <equals arg1="${platform}" arg2="posix"/>
	     <equals arg1="${mode}" arg2="release"/>
	   </and>
	   <then>
	     <chmod dir="${distdir}" perm="+x" 
		    includes="**/*.sh"/>
	     <chmod file="${distdir}/${distname}" perm="+x" />

	     <echo message="Stripping ${distdir}/${distname}"/>
	     <exec executable="strip" failonerror="true" 
		   resolveexecutable="true" searchpath="true">
	       <arg value="${distdir}/${distname}"/>
	     </exec>       
	   </then>
	 </if>
	 
	 <delete file="${distdir}.zip"/> 
	 <zip destfile="${distdir}.zip"> 
	   
	   <zipfileset filemode="755" dir="${dist.home}" 
		       includes="${distname}_${platform}_${mode}/${distname},
				 ${distname}_${platform}_${mode}/**/*.sh"/>
	   
	   <zipfileset dir="${dist.home}"
		       includes="${distname}_${platform}_${mode}/**"
		       excludes="${distname}_${platform}_${mode}/${distname},
				 ${distname}_${platform}_${mode}/**/*.sh"/>
	   
	 </zip>
	 
       </sequential>
    </for>

  </target>
-->


</project>

