<project name="synthese" default="build" basedir=".">


  <import file="../common.xml"/>

  <property name="version" value="3.0"/>
  <property name="lang" value="c++"/>
  
  <property name="include.home" value="${src.home}"/>

  <property name="deploy.local.lib.regexp.from" value="(.*)"/>
  <property name="deploy.local.lib.regexp.to" value="\1"/>

  <property name="profile" value="false"/>     

  <property name="build.number" value="snapshot"/>     


  <target name="build" description="[-Dtarget=TARGET] [-Dmode=MODE] : build TARGET">

    <fail unless="target"/>

    <antcall target="sconsbuild">
      <param name="goal.param" value="build"/>
      <param name="target.param" value="${target}"/>
      <param name="profile.param" value="${profile}"/>
    </antcall>
    
  </target>

       
  <target name="genmsvs" description=" : generate MS Visual Studio 2005 project files">

    <antcall target="sconsbuild">
      <param name="goal.param" value="genmsvs"/>
      <param name="target.param" value=""/>
    </antcall>
    
  </target>
       

  <target name="clean" description="[-Dtarget=TARGET] [-Dmode=MODE] : clean TARGET">
    <antcall target="sconsbuild">
      <param name="goal.param" value=""/>
      <param name="target.param" value="${target}"/>
      <param name="opts" value="-c"/>
    </antcall>

  </target>




  <target name="dist" description="[-Dtarget=TARGET] [-Dmode=MODE] -Ddistname=DISTNAME : create an installable distribution of TARGET as DISTNAME"
	  depends="setbuildversion">

    <fail unless="target"/>
    <fail unless="distname"/>

    <antcall target="sconsbuild">
      <param name="goal.param" value="dist"/>
      <param name="target.param" value="${target}"/>
      <param name="profile.param" value="${profile}"/>
      <param name="distname.param" value="${distname}"/>
      <param name="version.param" value="${version}"/>
      <param name="buildnumber.param" value="${build.number}"/>
    </antcall>

  </target>



  <target name="install" depends="dist" description="[-Dtarget=TARGET] [-Dmode=MODE] -Ddistname=DISTNAME : install TARGET on localhost as DISTNAME">

    <propertyregex property="targetname" input="${target}" casesensitive="false"
		   regexp="^.*/(.*)" select="\1" override="true"/>

    <var name="distdir" 
	 value="${build.home}/${platform}/${toolset}/${mode}/main/${targetname}/${distname}_dist"/>
    
    <switch value="${platform}">
      
      <case value="posix">
	
	<exec executable="sudo" dir="${distdir}">
	  <arg value="./install.sh"/>
	</exec>

      </case>
      
      <default>
	<fail message="Installation not supported on ${platform}" />
      </default>
      
    </switch>

  </target>





  <target name="remoteinstall" depends="dist" description="[-Dtarget=TARGET] [-Dmode=MODE] -Ddistname=DISTNAME -Dremoteinstall.host=RHOST: install TARGET on RHOST as DISTNAME">

    <fail unless="remoteinstall.host"/>

    <property name="remoteinstall.user" value="build"/>

    <propertyregex property="targetname" input="${target}" casesensitive="false"
		   regexp="^.*/(.*)" select="\1" override="true"/>

    <var name="distdir" 
	 value="${build.home}/${platform}/${toolset}/${mode}/main/${targetname}/${distname}_dist"/>


      <switch value="${platform}">
      
        
        <case value="posix">
	  <shellscript shell="bash">
           scp -r -C -P 200 ${distdir} ${remoteinstall.user}@${remoteinstall.host}:/srv/tmp/ 
           ssh -p 200 ${remoteinstall.user}@${remoteinstall.host} &quot;cd /srv/tmp/${distname}_dist &amp;&amp; sudo ./install.sh&quot;
          </shellscript>
	  

        </case>
        
        <default>
          <echo message="Do not know how to remoteinstall on ${platform}" />
        </default>
      </switch>
      
      
  </target>



  <target name="setbuildversion" description="Sets the buildversion for the current build">
    <exec executable="svnversion" spawn="false" dir="${basedir}" outputproperty="tmp.build.number">
      <arg line="."/>
    </exec>

    <propertyregex property="build.number"
		   input="${tmp.build.number}"
		   regexp="([0-9]*)"
		   select="\1"
		   casesensitive="false"
		   defaultValue="snapshot"
		   override="true"/>

    <echo message="Build number is ${build.number}"/>

  </target>




</project>

