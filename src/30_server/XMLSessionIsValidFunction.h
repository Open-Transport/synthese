
//////////////////////////////////////////////////////////////////////////////////////////
/// XMLSessionIsValidFunction class header.
///	@file XMLSessionIsValidFunction.h
///	@author Hugues
///	@date 2009
///
///	This file belongs to the SYNTHESE project (public transportation specialized software)
///	Copyright (C) 2002 Hugues Romain - RCS <contact@reseaux-conseil.com>
///
///	This program is free software; you can redistribute it and/or
///	modify it under the terms of the GNU General Public License
///	as published by the Free Software Foundation; either version 2
///	of the License, or (at your option) any later version.
///
///	This program is distributed in the hope that it will be useful,
///	but WITHOUT ANY WARRANTY; without even the implied warranty of
///	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
///	GNU General Public License for more details.
///
///	You should have received a copy of the GNU General Public License
///	along with this program; if not, write to the Free Software
///	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

#ifndef SYNTHESE_XMLSessionIsValidFunction_H__
#define SYNTHESE_XMLSessionIsValidFunction_H__

#include "FactorableTemplate.h"
#include "Function.h"

namespace synthese
{
	namespace server
	{
		/** Public function to test if a session id represents a valid session.
			@author Hugues Romain
			@date 2009
			@ingroup m15Functions refFunctions

			<h3>Requête</h3>

			<pre>
			fonction=XMLSessionIsValidFunction
			si=<numéro de session>
			</pre>
			
			<h3>Réponse</h3>

			@image html xml_valid_session.png

			La réponse indique si le numéro de session correspond à une session valide ou non, sans donner plus d’informations.
			Le retour XML est réduit au minimum.
			<ul>
			<li>id : identificateur de la session demandée pour contrôle</li>
			<li>valid : indique si la session peut être utilisée dans un délai d’une minute après la requête</li>
			</ul>

			<h3>Attachments</h3>

			<ul>
			<li><a href="include/15_server/xml_session_is_valid_function.xsd">Response XSD schema</a></li>
			<li><a href="include/15_server/XMLSessionIsValidFunctionSample.xml">Example of XML response</a></li>
			</ul>
		*/
		class XMLSessionIsValidFunction:
			public util::FactorableTemplate<server::Function,XMLSessionIsValidFunction>
		{
		public:
			static const std::string PARAMETER_SESSION_ID_TO_CONTROL;
			
		protected:
			//! \name Page parameters
			//@{
				std::string _sessionIdToControl;
			//@}
			
			
			//////////////////////////////////////////////////////////////////////////
			/// Conversion from attributes to generic parameter maps.
			///	@return Generated parameters map
			/// @author Hugues
			/// @date 2009
			server::ParametersMap _getParametersMap() const;
			
			
			
			//////////////////////////////////////////////////////////////////////////
			/// Conversion from generic parameters map to attributes.
			///	@param map Parameters map to interpret
			/// @author Hugues
			/// @date 2009
			virtual void _setFromParametersMap(
				const server::ParametersMap& map
			);
			
			
		public:



			//////////////////////////////////////////////////////////////////////////
			/// Display of the content generated by the function.
			/// @param stream Stream to display the content on.
			/// @author Hugues
			/// @date 2009
			virtual void run(std::ostream& stream, const server::Request& request) const;
			
			
			
			//////////////////////////////////////////////////////////////////////////
			/// Gets if the function can be run according to the user of the session.
			/// @return true if the function can be run
			/// @author Hugues
			/// @date 2009
			virtual bool isAuthorized(const server::Session* session) const;



			//////////////////////////////////////////////////////////////////////////
			/// Gets the Mime type of the content generated by the function.
			/// @return the Mime type of the content generated by the function
			/// @author Hugues
			/// @date 2009
			virtual std::string getOutputMimeType() const;
		};
	}
}

#endif // SYNTHESE_XMLSessionIsValidFunction_H__
