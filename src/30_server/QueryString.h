
/** QueryString class header.
	@file QueryString.h

	This file belongs to the SYNTHESE project (public transportation specialized software)
	Copyright (C) 2002 Hugues Romain - RCS <contact@reseaux-conseil.com>

	This program is free software; you can redistribute it and/or
	modify it under the terms of the GNU General Public License
	as published by the Free Software Foundation; either version 2
	of the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program; if not, write to the Free Software
	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*/

#ifndef SYNTHESE_server_QueryString_h__
#define SYNTHESE_server_QueryString_h__

#include <string>

#include "01_util/UId.h"

namespace synthese
{
	namespace server
	{
		/** QueryString class.
			@ingroup m18

			The QueryString is the string part of the Request class.

			It handles the result string of the request and all the constants defining the base parameters of the request.
		*/
		class QueryString
		{
		public:
			static const std::string PARAMETER_SEPARATOR;
			static const std::string PARAMETER_ASSIGNMENT;
			static const int MAX_SIZE;
			static const uid UID_WILL_BE_GENERATED_BY_THE_ACTION;

			static const std::string PARAMETER_STARTER;
			static const std::string PARAMETER_FUNCTION;
			static const std::string PARAMETER_SESSION;
			static const std::string PARAMETER_IP;
			static const std::string PARAMETER_CLIENT_URL;
			static const std::string PARAMETER_OBJECT_ID;
			static const std::string PARAMETER_ACTION;
			static const std::string PARAMETER_ACTION_FAILED;
			static const std::string PARAMETER_ERROR_MESSAGE;
			static const std::string PARAMETER_ERROR_LEVEL;

		private:
			std::string _content;

		public:
			/** QueryString constructor.
				@param text content of the query string
				@param normalize true|default = converts the url considering it is generated by a web browser (see @ref _normalizeQueryString), false = do not transform the URL.
					The second option is available if the Request object is used for building virtual urls containing scripts command (eg : synthese?id='+ document.getElementById("toto").value+'&...)
				@author Hugues Romain
				@date 2007
			*/
			QueryString(const std::string& text, bool normalize);
			
			const std::string& getContent() const;

		};
	}
}

#endif // SYNTHESE_server_QueryString_h__
