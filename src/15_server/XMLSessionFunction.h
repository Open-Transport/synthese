
//////////////////////////////////////////////////////////////////////////////////////////
/// XMLSessionFunction class header.
///	@file XMLSessionFunction.h
///	@author Hugues
///	@date 2009
///
///	This file belongs to the SYNTHESE project (public transportation specialized software)
///	Copyright (C) 2002 Hugues Romain - RCS <contact@reseaux-conseil.com>
///
///	This program is free software; you can redistribute it and/or
///	modify it under the terms of the GNU General Public License
///	as published by the Free Software Foundation; either version 2
///	of the License, or (at your option) any later version.
///
///	This program is distributed in the hope that it will be useful,
///	but WITHOUT ANY WARRANTY; without even the implied warranty of
///	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
///	GNU General Public License for more details.
///
///	You should have received a copy of the GNU General Public License
///	along with this program; if not, write to the Free Software
///	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

#ifndef SYNTHESE_XMLSessionFunction_H__
#define SYNTHESE_XMLSessionFunction_H__

#include "FactorableTemplate.h"
#include "Function.h"

namespace synthese
{
	namespace server
	{
		/** Returns informations about the current user session.
			@author Hugues Romain
			@date 2009
			@ingroup m15Functions refFunctions

			<h3>Request</h3>

			<pre>
			fonction=XMLSessionFunction
			sid=<id session> : current session id (must be valid)
			</pre>

			<h3>Response</h3>

			@image html session.png

			Le retour de la connexion d’utilisateur (login) est décrit comme suit :
			<ul>
			<li>session : identificateur de la session (généré aléatoirement). Vide si pas de session valide en cours</li>
			<li>si une session valide est en cours (sinon seul le champ session, vide, est présent) :</li>
			<ul>
			<li>name : nom de l’utilisateur connecté</li>
			<li>phone : téléphone de l’utilisateur connecté</li>
			<li>email : adresse e-mail de l’utilisateur connecté</li>
			<li>user_id : identificateur de l’utilisateur connecté dans la base de données de SYNTHESE (pérenne)</li>
			</ul></ul>

			Tip : this function can be used in conjunction with the LoginAction and LogoutAction actions to handle user login.

			<h3>Attachments</h3>

			<ul>
			<li><a href="include/15_server/xml_session_function.xsd">Response XSD Schema</a></li>
			<li><a href="include/15_server/XMLSessionFunctionSample.xml">Example of XML response</a></li>
			</ul>

		*/
		class XMLSessionFunction:
			public util::FactorableTemplate<server::Function,XMLSessionFunction>
		{
		public:
			
		protected:
			
			
			//////////////////////////////////////////////////////////////////////////
			/// Conversion from attributes to generic parameter maps.
			///	@return Generated parameters map
			/// @author Hugues
			/// @date 2009
			server::ParametersMap _getParametersMap() const;
			
			
			
			//////////////////////////////////////////////////////////////////////////
			/// Conversion from generic parameters map to attributes.
			///	@param map Parameters map to interpret
			/// @author Hugues
			/// @date 2009
			virtual void _setFromParametersMap(
				const server::ParametersMap& map
			);
			
			
		public:
			/// @todo Getters/Setters for parsed parameters



			//////////////////////////////////////////////////////////////////////////
			/// Display of the content generated by the function.
			/// @param stream Stream to display the content on.
			/// @author Hugues
			/// @date 2009
			virtual void run(std::ostream& stream, const server::Request& request) const;
			
			
			
			//////////////////////////////////////////////////////////////////////////
			/// Gets if the function can be run according to the user of the session.
			/// @return true if the function can be run
			/// @author Hugues
			/// @date 2009
			virtual bool isAuthorized(const server::Session* session) const;



			//////////////////////////////////////////////////////////////////////////
			/// Gets the Mime type of the content generated by the function.
			/// @return the Mime type of the content generated by the function
			/// @author Hugues
			/// @date 2009
			virtual std::string getOutputMimeType() const;
		};
	}
}

#endif // SYNTHESE_XMLSessionFunction_H__
