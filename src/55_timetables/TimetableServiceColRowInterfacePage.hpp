
/** TimetableServiceColRowInterfacePage class header.
	@file TimetableServiceColRowInterfacePage.hpp
	@author Hugues Romain
	@date 2010

	This file belongs to the SYNTHESE project (public transportation specialized software)
	Copyright (C) 2002 Hugues Romain - RCS <contact@reseaux-conseil.com>

	This program is free software; you can redistribute it and/or
	modify it under the terms of the GNU General Public License
	as published by the Free Software Foundation; either version 2
	of the License, or (at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program; if not, write to the Free Software
	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*/

#ifndef SYNTHESE_TimetableLineRowInterfacePage_H__
#define SYNTHESE_TimetableLineRowInterfacePage_H__

#include "InterfacePage.h"
#include "FactorableTemplate.h"
#include "TimetableResult.hpp"

namespace synthese
{
	namespace server
	{
		class Request;
	}
	
	namespace timetables
	{
		class TimetableRow;

		/** 55.11 Interface page : Row of timetable with services by column.
			@ingroup m55Pages refPages
			@author Hugues Romain
			@date 2010
			@since 3.1.16

			@code timetable_row_lines @endcode

			Common parameters :
				- 0 : type of cell (line, time, notes, booking, rollingstock)
				- 1 : lines cell (generated by TimetableServiceColCellInterfacePage)
				
			If cell type is line, no parameters.

			If cell type is time, parameters :
				- 2 : row number
				- 3 : row number is odd
				- 4 : city id
				- 5 : place id
				- 6 : city name
				- 7 : place name

			If cell type is note numbers, no parameters
			
			If cell type is booking, no parameters
			@todo implement booking column

			If cell type is rolling stock, no parameters
		*/
		class TimetableServiceColRowInterfacePage
			: public util::FactorableTemplate<interfaces::InterfacePage, TimetableServiceColRowInterfacePage>
		{
		public:

			/** Display of the row containing the line numbers.
				This function converts the parameters into a single ParametersVector object.
				@param stream Stream to write on
				@param lines Line of each column
				@param variables Execution variables
				@param request Source request
			*/
			void display(
				std::ostream& stream,
				const TimetableResult::RowLinesVector& lines,
				interfaces::VariablesMap& variables,
				const server::Request* request = NULL
			) const;
			


			/** Display of the row containing the line numbers.
				This function converts the parameters into a single ParametersVector object.
				@param stream Stream to write on
				@param places informations about the row
				@param times Time of each column (not_a_date_time = stop not served)
				@param variables Execution variables
				@param request Source request
			*/
			void display(
				std::ostream& stream,
				const TimetableRow& place,
				const TimetableResult::RowTimesVector& times,
				interfaces::VariablesMap& variables,
				const server::Request* request = NULL
			) const;




			/** Display of the row containing the note numbers.
				This function converts the parameters into a single ParametersVector object.
				@param stream Stream to write on
				@param notes Note of each column (NULL = no note)
				@param variables Execution variables
				@param request Source request
			*/
			void display(
				std::ostream& stream,
				const TimetableResult::RowNotesVector& notes,
				interfaces::VariablesMap& variables,
				const server::Request* request = NULL
			) const;



			/** Display of the row containing the rolling stock.
				This function converts the parameters into a single ParametersVector object.
				@param stream Stream to write on
				@param rollingStock Rolling stock used by each column (NULL = no information)
				@param variables Execution variables
				@param request Source request
			*/
			void display(
				std::ostream& stream,
				const TimetableResult::RowRollingStockVector& rollingStock,
				interfaces::VariablesMap& variables,
				const server::Request* request = NULL
			) const;



			//////////////////////////////////////////////////////////////////////////
			/// Constructor.
			TimetableServiceColRowInterfacePage();
		};
	}
}

#endif // SYNTHESE_TimetableLineRowInterfacePage_H__
