import os.path

Import ('mainenv')
moduleenv = mainenv.ModuleEnv()

includes = 'main.cpp'
excludes = []


#moduleenv.AppendMultithreadConf ()

#files = moduleenv.Glob(includes, excludes)

# NOTE : Create first a static library before linking the program,
# otherwise, very strange gnu.link_once errors on boost time
#moduleenv.StaticLibrary ( moduleenv.DefaultModuleName(), files )


#moduleenv = mainenv.ModuleEnv()
#includes = ''
#excludes = []


files = moduleenv.Glob(includes, excludes)

# Modules libs
moduleenv.AddModuleDependency ('70_server')
moduleenv.AddModuleDependency ('40_carto_ls_xml')
moduleenv.AddModuleDependency ('16_env_ls_xml')
moduleenv.AddModuleDependency ('39_carto')

moduleenv.AddModuleDependency ('17_env_ls_sql')
moduleenv.AddModuleDependency ('15_env')
moduleenv.AddModuleDependency ('11_interfaces')

# Generic libs
moduleenv.AddModuleDependency ('04_time')
moduleenv.AddModuleDependency ('00_tcp')
moduleenv.AddModuleDependency ('02_db')
moduleenv.AddModuleDependency ('01_util')
moduleenv.AddModuleDependency ('07_lex_matcher')


moduleenv.AddBoostDependency ('boost_filesystem')
moduleenv.AddBoostDependency ('boost_date_time')
moduleenv.AddBoostDependency ('boost_thread')
moduleenv.AddBoostDependency ('boost_iostreams')
moduleenv.AddBoostDependency ('boost_program_options')
moduleenv.AddSQLiteDependency ()
moduleenv.AppendMultithreadConf ()






def build_it(target = None, source = None, env = None):
    print ('************ Ole!!!')
    return 0
 
a = Action(build_it)

moduleenv.AddPreAction (moduleenv.DefaultModuleName(), a)
moduleenv.AlwaysBuild (moduleenv.DefaultModuleName())


moduleenv.Program ( moduleenv.DefaultModuleName(), files )


