import os.path

Import ('mainenv')
moduleenv = mainenv.ModuleEnv()

includes = '*.cpp'
excludes = []

moduleenv.AppendMultithreadConf ()

files = moduleenv.Glob(includes, excludes)

srcpath = Dir('.').srcnode().abspath
subdirs = os.listdir( srcpath )


# Build the list of modules to be processed
for f in subdirs:
	if not os.path.isdir (os.path.join (srcpath, f)): continue
	files.append (moduleenv.Glob (includes, excludes, os.path.join (srcpath, f)))

moduleenv.StaticLibrary ( moduleenv.DefaultModuleName(), files )



moduleenv = mainenv.ModuleEnv()
includes = ''
excludes = []
files = moduleenv.Glob(includes, excludes)


# Modules libs
moduleenv.AddModuleDependency ('02_db')
moduleenv.AddModuleDependency ('01_util')
moduleenv.AddModuleDependency ('00_tcp')
moduleenv.AddBoostDependency ('boost_filesystem')
moduleenv.AddBoostDependency ('boost_date_time')
moduleenv.AddBoostDependency ('boost_program_options')
moduleenv.AddBoostDependency ('boost_thread')
moduleenv.AddBoostDependency ('boost_iostreams')
moduleenv.AppendMultithreadConf ()

moduleenv.Program ( moduleenv.DefaultModuleName(), files )



