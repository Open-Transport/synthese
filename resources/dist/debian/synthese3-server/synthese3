#!/bin/bash

### BEGIN INIT INFO
# Provides:          synthese3
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Should-Start:      $local_fs
# Should-Stop:       $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start synthese3
# Description:       Start synthese3 server.
### END INIT INFO#

DAEMON=synthese3-server
PIDDIR=/var/run/$DAEMON
PIDFILE=$PIDDIR/$DAEMON.pid


SERVERPORT=3593   # main server port
DBPORT=3601       # listening port for db clients
LOGLEVEL=1        # log level
TMPDIR=/tmp       # temporary storage directory
NODEID=1          # unique node id across all rings
AUTHORITY=1       # 1 if node is authority; 0 otherwise


test -x /usr/share/$DAEMON/$DAEMON || ( echo "$DAEMON not found !" && exit 0 )

. /lib/lsb/init-functions

case "$1" in
	start)
		log_daemon_msg "Starting $DAEMON ..."

		# Make sure we have our PIDDIR, even if it's on a tmpfs
		install -o root -g root -m 755 -d $PIDDIR

		if ! start-stop-daemon --start --background --make-pidfile --pidfile $PIDFILE --quiet --oknodo --startas /usr/share/$DAEMON/startup.sh -- --param port=$SERVERPORT --param db_port=$DBPORT --param log_level=$LOGLEVEL --param tmp_dir=$TMPDIR --param dbring_node_id=$NODEID --param dbring_authority=$AUTHORITY ; then
		    log_end_msg 1
		    exit 1
		fi

		log_end_msg 0
		;;
	stop)
		log_daemon_msg "Stopping $DAEMON ..."

                # send an interrupt signal so that process shutdown properly		
		start-stop-daemon --stop --quiet --pidfile $PIDFILE
                pkill -SIGINT -x ${DAEMON:0:15}   
    
	        # Wait a little and remove stale PID file
		sleep 1
		if [ -f $PIDFILE ] && ! ps h `cat $PIDFILE` > /dev/null
		then
		  # Stale PID file,
		  # remove it
		  rm -f $PIDFILE
		fi

		log_end_msg 0
		exit 0
		;;
	restart)
		$0 stop
		sleep 1
		$0 start
		;;
	force-reload)
		restart
		;;
	*)
		log_success_msg "Usage: /etc/init.d/$DAEMON {start|stop|restart|force-reload}"
		exit 1
		;;
esac

exit 0
